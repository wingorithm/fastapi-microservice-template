# Defines the application-level services.
# This file depends on the infrastructure being started first.
version: '3.8'

services:
  kong-migrations:
    image: kong:latest
    command: "kong migrations bootstrap"
    depends_on:
      # These services are expected to be running on the shared network
      - postgres
      - consul
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=postgres
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
    networks:
      - microservices-net
    restart: on-failure

  kong:
    image: kong:latest
    container_name: kong
    depends_on:
      - postgres
      - kong-migrations
      - consul
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=postgres
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_DNS_RESOLVER=consul:8600
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
    networks:
      - microservices-net

  service_a:
    image: python:3.11-slim
    container_name: service_a
    command: ["sleep", "infinity"]
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/service_a_db
    networks:
      - microservices-net

  service_b:
    image: python:3.11-slim
    container_name: service_b
    command: ["sleep", "infinity"]
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/service_b_db
    networks:
      - microservices-net

# This tells Docker Compose that the network is created elsewhere
# and this stack should join it, not create it.
networks:
  microservices-net:
    external: true

